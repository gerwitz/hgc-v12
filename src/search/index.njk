---
title: Search
layout: index
eleventyExcludeFromCollections: true
---

<form action="?" method="get">
  <div class="search-form" role="search">
    <input type="text" aria-label="Search this site" placeholder="Search this site" autocorrect="off" autocapitalize="off" autocomplete="off" spellcheck="false" name="q">
    <button type="submit" disabled="" aria-label="search"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 13 13" version="1"><g stroke-width="2" stroke="#000000" fill="none"><path d="M11.29 11.71l-4-4"/><circle cx="5" cy="5" r="4"/></g></svg></button>
  </div>
</form>

<section id="search-results">
  <p class="message"></p>
  <div class="results"></div>
</section>

<script src="https://unpkg.com/lunr/lunr.js"></script>
<script>
  // only good for n < 100
  function ordinal(n) {
    var sfx = ["th","st","nd","rd"];
    return n + (sfx[(n-20)%10] || sfx[n] || sfx[0]);
  }

  var monthNames = new Array("January","February","March","April","May"," June","July","August","September","October","November","December");
  function monthName(n) {
    return(monthNames[n]);
  }

  var queryEl = document.querySelector('.search-form input');
  function updateQuery(query) {
    queryEl.value = query;
  }

  var messageEl = document.querySelector('#search-results .message');
  var resultsEl = document.querySelector('#search-results .results');
  function display(message, results) {
    messageEl.innerHTML = message;
    resultsEl.innerHTML = results;
  }

  var lunrIndex;
  var lunrMap;
  var currentQuery;

  function executeSearch(data) {
    lunrIndex = lunr.Index.load(data.index);
    lunrMap = data.map;
    var results = lunrIndex.search(currentQuery);
    if (results.length > 0) {
    var list = '<ol class="article-list">';
      results.forEach(function(result, index) {
        page = lunrMap[Number(result.ref)];
        list += '<li><a href="'+page.url+'">' +
          '<span class="title">'+page.title+'<\/span>' +
          '<\/a>';
        if (page.meta) {
          list += ' <span class="meta">('+page.meta+')<\/span>';
        }
        list += '<\/li>';
      });
      list += '<\/ol>';
      display(results.length+' results:', list);
    }
    else {
      display('No results, sorry.', '');
    }
  }

  function fetchIndex() {
    display('Loading','&#8230;');

    var request = new XMLHttpRequest();

    request.addEventListener("progress", updateProgress);
    request.addEventListener("load", transferComplete);
    request.addEventListener("error", transferFailed);

    request.open('GET', '/search/lunr.json', true);

    request.send();
  }

  function updateProgress(e) {
    if (e.lengthComputable) {
      var percentComplete = e.loaded / e.total * 100;
      display('Loading', MAth.round(percentComplete) + '%');
    } else {
      display('Loading', '&#8230;&#8230;');
    }
  }

  function transferFailed() {
    display('<span class="error">Unable to download index.</span>', '');
  }

  function transferComplete(e) {
    var request = e.currentTarget;
    if (request.status >= 200 && request.status < 400) {
      // Success!
      var data = JSON.parse(request.responseText);
      executeSearch(data)
    } else {
      display('<span class="error">Unable to download index.</span>', 'Error '+request.status);
    }
  }

  // parse querystring value
  function paramValue(query_param) {
    var results = new RegExp('[\\?&]' + query_param + '=([^&#]*)').exec(window.location.href);
    return results ? results[1] : false;
  }

  function ready() {
    display('', '');
    if (paramValue('q')) {
      currentQuery = paramValue('q');
      updateQuery(currentQuery);
      fetchIndex(currentQuery);
    }
  }

  // when document is loaded, go!
  if (document.attachEvent ? document.readyState === "complete" : document.readyState !== "loading") {
    ready();
  } else {
    document.addEventListener('DOMContentLoaded', ready);
  }
</script>
