---
title: Search
layout: page
eleventyExcludeFromCollections: true
---

<form id="search-form" action="?" method="get">
  <input type="text" name="q" id="query">
  <button type="submit" class="submit">Search</button>
</form>

<section id="search-results">
  <p class="message"></p>
  <div class="results"></div>
</section>

<script src="https://unpkg.com/lunr/lunr.js"></script>
<script>
  // only good for n < 100
  function ordinal(n) {
    var sfx = ["th","st","nd","rd"];
    return n + (sfx[(n-20)%10] || sfx[n] || sfx[0]);
  }

  var monthNames = new Array("January","February","March","April","May"," June","July","August","September","October","November","December");
  function monthName(n) {
    return(monthNames[n]);
  }

  var messageEl = document.querySelector('#search-results .message');
  var resultsEl = document.querySelector('#search-results .results');
  function display(message, results) {
    messageEl.innerHTML = message;
    resultsEl.innerHTML = results;
  }

  var lunrIndex;
  var lunrMap;

  function executeSearch(data, query) {
    lunrIndex = lunr.Index.load(data.index);
    lunrMap = data.map;
    console.log('map', lunrMap);
    var results = lunrIndex.search(query);
    console.log('Found ' + results.length + ' results', results);
    if (results.length > 0) {
    var list = '<ol class="article-list">';
      results.forEach(function(result, index) {
        page = lunrMap[Number(result.ref)];
        console.log('Result reference '+result.ref, page);
        list += '<li><a href="'+page.url+'">' +
          '<span class="title">'+page.title+'<\/span>' +
          '<\/a><\/li>';
      });
      list += '<\/ol>';
      display(results.length+' results:', list);
    }
    else {
      display('No results, sorry.', '');
    }
  }

  function fetchIndex(query) {
    display('Loading','&#8230;');
    var request = new XMLHttpRequest();
    request.open('GET', '/search/lunr.json', true);

    request.onload = function() {
      if (request.status >= 200 && request.status < 400) {
        // Success!
        var data = JSON.parse(request.responseText);
        executeSearch(data, query)
      } else {
        display('<span class="error">Unable to download index ('+request.status+').</span>', '');
      }
    };

    request.onerror = function() {
      display('<span class="error">Unable to download index.</span>', '');
    };

    request.send();
  }

  // parse querystring value
  function paramValue(query_param) {
    var results = new RegExp('[\\?&]' + query_param + '=([^&#]*)').exec(window.location.href);
    return results ? results[1] : false;
  }

  function ready() {
    display('', '');
    var query = paramValue('q');
    if (query) {
      fetchIndex(query);
    }
  }

  // when document is loaded, go!
  if (document.attachEvent ? document.readyState === "complete" : document.readyState !== "loading") {
    ready();
  } else {
    document.addEventListener('DOMContentLoaded', ready);
  }
</script>
